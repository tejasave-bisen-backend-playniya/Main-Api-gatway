worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/json;

    # Logs
    access_log logs/access.log;
    error_log logs/error.log;

    # Rate Limiting: 10 req/sec, burst up to 10 without delay
    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;

    # IP Filtering
    geo $blocked_ip {
        default 0;
        192.168.1.100 1;
        127.0.0.1 0;
        192.168.1.14 0;
        192.168.1.13 0;
    }

    # Token Whitelist (only allow Bearer supersecurekey)
    map $http_authorization $is_valid_token {
        default 0;
        "Bearer supersecurekey" 1;
    }

    # === Upstream Definitions ===
    upstream auth_service {
        server 192.168.1.22:5000;
    }

    upstream user_service {
        server 127.0.0.1:5002;
    }

    upstream wallet_service {
        server 127.0.0.1:5001;
    }

    upstream game_service {
        server 127.0.0.1:5006;
    }

    upstream kyc_service {
        server 127.0.0.1:5005;
    }

    upstream leaderboard_service {
        server 127.0.0.1:5004;
    }

    upstream payment_service {
        server 127.0.0.1:5003;
    }

    server {
        listen 3001;
        server_name localhost;

        # Deny Blocked IPs
        if ($blocked_ip) {
            return 403 '{"error":"Your IP is blocked"}';
        }

        # Block missing or invalid tokens
        if ($is_valid_token = 0) {
            return 401 '{"error":"Invalid or missing token"}';
        }

        # Common Headers for all proxy requests
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;

        location /auth/ {
            limit_req zone=req_limit burst=10 nodelay;
            limit_req_status 429;

            # Rewrite /auth/... to /v1/auth/...
            rewrite ^/auth/(.*)$ /v1/auth/$1 break;

            proxy_pass http://auth_service;
            proxy_set_header Connection "";
        }

        location /user/ {
            proxy_pass http://user_service;
        }

        location /wallet/ {
            proxy_pass http://wallet_service;
        }

        location /game/ {
            proxy_pass http://game_service;
        }

        location /kyc/ {
            proxy_pass http://kyc_service;
        }

        location /leaderboard/ {
            proxy_pass http://leaderboard_service;
        }

        location /payment/ {
            proxy_pass http://payment_service;
        }

        # Error Pages
        error_page 403 404 500 502 503 504 /error.json;
        location = /error.json {
            return 500 '{"error":"Internal server error"}';
        }
    }
}
