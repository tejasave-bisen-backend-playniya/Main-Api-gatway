worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/json;

    access_log logs/access.log;
    error_log logs/error.log;

    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;

    include /media/mdsalman/Playniya/forked/Main-Api-gatway/conf.d/blocked_ips.conf;
    include /media/mdsalman/Playniya/forked/Main-Api-gatway/conf.d/upstreams.conf;

    server {
        listen 443 ssl;
        server_name localhost;
        
        ssl_certificate     /media/mdsalman/Playniya/forked/Main-Api-gatway/ssl/certificate.crt;
        ssl_certificate_key /media/mdsalman/Playniya/forked/Main-Api-gatway/ssl/private.key;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        
        include /media/mdsalman/Playniya/forked/Main-Api-gatway/conf.d/maintenance.conf;

       


        if ($blocked_ip) {
            return 403 '{"error":"Your IP is blocked"}';
        }

        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;

        location /internal/auth {
            internal;
            proxy_pass http://auth_service/auth/verify-token;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Authorization $http_authorization;
        }

        location /auth/ {
            limit_req zone=req_limit burst=10 nodelay;
            limit_req_status 429;
            proxy_pass http://auth_service/;
        }

        location /user/ { 
            limit_req zone=req_limit burst=10 nodelay;
            limit_req_status 429;
            auth_request /internal/auth; 
            proxy_pass http://user_service/;
        }
        
        location /wallet/ { 
            auth_request /internal/auth;
            proxy_pass http://wallet_service/; 
        }
        
        location /game/ { 
            auth_request /internal/auth; 
            proxy_pass http://game_service/; 
        }
        
        location /kyc/ { 
            auth_request /internal/auth; 
            proxy_pass http://kyc_service/; 
        }
        
        location /leaderboard/ { 
            auth_request /internal/auth; 
            proxy_pass http://leaderboard_service/; 
        }

        location /payment/ { 
            auth_request /internal/auth; 
            proxy_pass http://payment_service/; 
        }

        error_page 403 404 500 502 504 /error.json;
        location = /error.json {
            return 500 '{"error":"Internal server error"}';
        }
    }
}